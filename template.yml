AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  Sample stream processing reconcilliation
Globals:
  Function:
    Runtime: "go1.x"

Parameters:
  Env:
    Type: String
    Default: Dev
  VpcStackName:
    Type: String
    Default: vpc-dev
  CacheStackName:
    Type: String
    Default: mycache

Resources:
  StreamProcessor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ -, [StreamProcessor, !Ref "Env"]]
      Handler: bin/streamreader
      Events:
        StreamEvent:
          Type: Kinesis
          Properties:
            Stream: !GetAtt AppStream.Arn
            StartingPosition: LATEST
            BatchSize: 50
      Environment:
        Variables:
          TOPIC: !Ref ProcessedTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ProcessedTopic.TopicName
  Notified:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ -, [Notified, !Ref "Env"]]
      Handler: bin/notified
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", LambdaSG ]]
        SubnetIds:
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", Subnet1 ]]
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", Subnet2 ]]
      Environment:
        Variables:
          MEMCACHED_ENDPOINT: 
            Fn::ImportValue: !Join [ -, [ ReconCache, Ref: "CacheStackName", Endpoint ]]
          MEMCACHED_PORT: 
            Fn::ImportValue: !Join [ -, [ ReconCache, Ref: "CacheStackName", Port ]]
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref ProcessedTopic

  Checker:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join [ -, [Checker, !Ref "Env"]]
      Handler: bin/checker
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", LambdaSG ]]
        SubnetIds:
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", Subnet1 ]]
          - Fn::ImportValue: !Join [ -, [ CacheVpc, Ref: "VpcStackName", Subnet2 ]]
      Environment:
        Variables:
          MEMCACHED_ENDPOINT: 
            Fn::ImportValue: !Join [ -, [ ReconCache, Ref: "CacheStackName", Endpoint ]]
          MEMCACHED_PORT: 
            Fn::ImportValue: !Join [ -, [ ReconCache, Ref: "CacheStackName", Port ]]


      Events:
        ChecerApiEvent:
          Type: Api
          Properties:
            Path: /reconcile
            Method: post

  AppStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Join [ -, [WreakStream, !Ref "Env"]]
      ShardCount: 1

  ProcessedTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Join [ -, [WreakStreamTopic, !Ref "Env"]]
      TopicName: !Join [ -, [WreakStreamTopic, !Ref "Env"]]